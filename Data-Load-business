CALL apoc.load.json("file:///yelp/yelp_business_postproc_attr_100.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id, bus.name AS name, bus.address AS address, bus.city AS city, bus.state AS state, bus.postal_code AS postal_code, bus.stars AS stars, bus.review_count AS review_count, bus.categories AS categories
MERGE (b:Business {ID: business_id})
    SET b.Name=name, b.Address=address, b.Stars=stars, b.Review_Count=review_count
WITH b, city, state, postal_code, attributes, categories
    MERGE (c:City {Name: city})
    MERGE (s:State {Name: state})
    MERGE (p:Postal {Code: postal_code})
    MERGE (b)-[:_in_]->(p)
    MERGE (p)-[:_in_]->(c)
    MERGE (c)-[:_in_]->(s)
WITH b, attributes, categories
    UNWIND categories AS cats
        MERGE (ca:Category {Name: cats})
        MERGE (b)-[:falls_in]->(ca)
WITH attributes.BusinessParking AS attr_busipark, b
    WHERE attr_busipark IS NOT NULL
        MERGE (a:Attribute:BusinessParking)
        WITH a, attr_busipark, b
        UNWIND attr_busipark AS opt
            MERGE (b)-[:has {Option: opt}]->(a)
	    
	    
	    
	    


CALL apoc.periodic.iterate(
"CALL apoc.load.json('file:///yelp/yelp_business.json') YIELD value AS bus", "WITH bus.business_id AS business_id, bus.name AS name, bus.address AS address, bus.city AS city, bus.state AS state MERGE (b:Business {ID: business_id}) MERGE (c:City {Name: city}) MERGE (s:State {Name: state}) MERGE (b)-[:_IN_]->(c) MERGE (c)-[:_IN_]->(s)", 
{batchsize: 50000});



CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.business_id AS business_id, bus.name AS name, bus.address AS address, bus.city AS city, bus.state AS state
MERGE (b:Business {ID: business_id})
    //SET b.Name=name, b.Address=address
MERGE (c:City {Name: city})
MERGE (s:State {Name: state})
MERGE (b)-[:_IN_]->(c)
MERGE (c)-[:_IN_]->(s)


CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH b,attributes
UNWIND keys(attributes) AS key_L1
	WITH key_L1, attributes[key_L1] AS val_L1, b
	WHERE  apoc.meta.type(val_L1)<>"MAP"
	    MERGE (a:Attributes {Name: key_L1})
	    WITH a,key_L1,val_L1,b
	    WHERE toBoolean(val_L1) = true
		    MERGE (b)-[:has]->(a)
        
        
//////////// Business Parking ////////////////

        
CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BusinessParking AS attr_busipark, b
    WHERE attr_busipark IS NOT NULL
    WITH attr_busipark.validated AS attr_busipark_validated, b
        WHERE attr_busipark_validated IS NOT NULL and toBoolean(attr_busipark_validated) = true
            WITH b
            MERGE (b)-[:has]->(bp:BusinessParking:validated {Name: ":BusinessParking:validated"});



CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BusinessParking AS attr_busipark, b
    WHERE attr_busipark IS NOT NULL
    WITH attr_busipark.street AS attr_busipark_street, b
        WHERE attr_busipark_street IS NOT NULL and toBoolean(attr_busipark_street) = true
            WITH b
            MERGE (b)-[:has]->(bp:BusinessParking:street {Name: ":BusinessParking:street"});


CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BusinessParking AS attr_busipark, b
    WHERE attr_busipark IS NOT NULL
    WITH attr_busipark.valet AS attr_busipark_valet, b
        WHERE attr_busipark_valet IS NOT NULL and toBoolean(attr_busipark_valet) = true
            WITH b
            MERGE (b)-[:has]->(bp:BusinessParking:valet {Name: ":BusinessParking:valet"});



CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BusinessParking AS attr_busipark, b
    WHERE attr_busipark IS NOT NULL
    WITH attr_busipark.garage AS attr_busipark_garage, b
        WHERE attr_busipark_garage IS NOT NULL and toBoolean(attr_busipark_garage) = true
            WITH b
            MERGE (b)-[:has]->(bp:BusinessParking:garage {Name: ":BusinessParking:garage"});



CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BusinessParking AS attr_busipark, b
    WHERE attr_busipark IS NOT NULL
    WITH attr_busipark.lot AS attr_busipark_lot, b
        WHERE attr_busipark_lot IS NOT NULL and toBoolean(attr_busipark_lot) = true
            WITH b
            MERGE (b)-[:has]->(bp:BusinessParking:lot {Name: ":BusinessParking:lot"});
            
            
////////////// Ambience /////////////

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.romantic AS attr_romantic, b
        WHERE attr_romantic IS NOT NULL and toBoolean(attr_romantic) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:romantic {Name: ":Ambience:romantic"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.divey AS attr_divey, b
        WHERE attr_divey IS NOT NULL and toBoolean(attr_divey) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:divey {Name: ":Ambience:divey"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.trendy AS attr_trendy, b
        WHERE attr_trendy IS NOT NULL and toBoolean(attr_trendy) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:trendy {Name: ":Ambience:trendy"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.intimate AS attr_intimate, b
        WHERE attr_intimate IS NOT NULL and toBoolean(attr_intimate) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:intimate {Name: ":Ambience:intimate"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.touristy AS attr_touristy, b
        WHERE attr_touristy IS NOT NULL and toBoolean(attr_touristy) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:touristy {Name: ":Ambience:touristy"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.upscale AS attr_upscale, b
        WHERE attr_upscale IS NOT NULL and toBoolean(attr_upscale) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:upscale {Name: ":Ambience:upscale"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.casual AS attr_casual, b
        WHERE attr_casual IS NOT NULL and toBoolean(attr_casual) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:casual {Name: ":Ambience:casual"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.classy AS attr_classy, b
        WHERE attr_classy IS NOT NULL and toBoolean(attr_classy) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:classy {Name: ":Ambience:classy"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Ambience AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.hipster AS attr_hipster, b
        WHERE attr_hipster IS NOT NULL and toBoolean(attr_hipster) = true
            WITH b
            MERGE (b)-[:has]->(bp:Ambience:hipster {Name: ":Ambience:hipster"});
            
            
//////////////// Best Nights //////////////

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BestNights AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.wednesday AS attr_wednesday, b
        WHERE attr_wednesday IS NOT NULL and toBoolean(attr_wednesday) = true
            WITH b
            MERGE (b)-[:has]->(bp:BestNights:wednesday {Name: ":BestNights:wednesday"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BestNights AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.sunday AS attr_sunday, b
        WHERE attr_sunday IS NOT NULL and toBoolean(attr_sunday) = true
            WITH b
            MERGE (b)-[:has]->(bp:BestNights:sunday {Name: ":BestNights:sunday"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BestNights AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.saturday AS attr_saturday, b
        WHERE attr_saturday IS NOT NULL and toBoolean(attr_saturday) = true
            WITH b
            MERGE (b)-[:has]->(bp:BestNights:saturday {Name: ":BestNights:saturday"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BestNights AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.monday AS attr_monday, b
        WHERE attr_monday IS NOT NULL and toBoolean(attr_monday) = true
            WITH b
            MERGE (b)-[:has]->(bp:BestNights:monday {Name: ":BestNights:monday"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BestNights AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.tuesday AS attr_tuesday, b
        WHERE attr_tuesday IS NOT NULL and toBoolean(attr_tuesday) = true
            WITH b
            MERGE (b)-[:has]->(bp:BestNights:tuesday {Name: ":BestNights:tuesday"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BestNights AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.thursday AS attr_thursday, b
        WHERE attr_thursday IS NOT NULL and toBoolean(attr_thursday) = true
            WITH b
            MERGE (b)-[:has]->(bp:BestNights:thursday {Name: ":BestNights:thursday"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.BestNights AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.friday AS attr_friday, b
        WHERE attr_friday IS NOT NULL and toBoolean(attr_friday) = true
            WITH b
            MERGE (b)-[:has]->(bp:BestNights:friday {Name: ":BestNights:friday"});
            
///////////// Dietery Restrictions ///////////////

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.DietaryRestrictions AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.soy-free AS attr_soy-free, b
        WHERE attr_soy-free IS NOT NULL and toBoolean(attr_soy-free) = true
            WITH b
            MERGE (b)-[:has]->(bp:DietaryRestrictions:soy-free {Name: ":DietaryRestrictions:soy-free"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.DietaryRestrictions AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.vegan AS attr_vegan, b
        WHERE attr_vegan IS NOT NULL and toBoolean(attr_vegan) = true
            WITH b
            MERGE (b)-[:has]->(bp:DietaryRestrictions:vegan {Name: ":DietaryRestrictions:vegan"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.DietaryRestrictions AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.gluten-free AS attr_gluten-free, b
        WHERE attr_gluten-free IS NOT NULL and toBoolean(attr_gluten-free) = true
            WITH b
            MERGE (b)-[:has]->(bp:DietaryRestrictions:gluten-free {Name: ":DietaryRestrictions:gluten-free"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.DietaryRestrictions AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.halal AS attr_halal, b
        WHERE attr_halal IS NOT NULL and toBoolean(attr_halal) = true
            WITH b
            MERGE (b)-[:has]->(bp:DietaryRestrictions:halal {Name: ":DietaryRestrictions:halal"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.DietaryRestrictions AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.vegetarian AS attr_vegetarian, b
        WHERE attr_vegetarian IS NOT NULL and toBoolean(attr_vegetarian) = true
            WITH b
            MERGE (b)-[:has]->(bp:DietaryRestrictions:vegetarian {Name: ":DietaryRestrictions:vegetarian"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.DietaryRestrictions AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.dairy-free AS attr_dairy-free, b
        WHERE attr_dairy-free IS NOT NULL and toBoolean(attr_dairy-free) = true
            WITH b
            MERGE (b)-[:has]->(bp:DietaryRestrictions:dairy-free {Name: ":DietaryRestrictions:dairy-free"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.DietaryRestrictions AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.kosher AS attr_kosher, b
        WHERE attr_kosher IS NOT NULL and toBoolean(attr_kosher) = true
            WITH b
            MERGE (b)-[:has]->(bp:DietaryRestrictions:kosher {Name: ":DietaryRestrictions:kosher"});
            
/////////////////// Good For meal //////////////////

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.GoodForMeal AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.breakfast AS attr_breakfast, b
        WHERE attr_breakfast IS NOT NULL and toBoolean(attr_breakfast) = true
            WITH b
            MERGE (b)-[:has]->(bp:GoodForMeal:breakfast {Name: ":GoodForMeal:breakfast"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.GoodForMeal AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.dinner AS attr_dinner, b
        WHERE attr_dinner IS NOT NULL and toBoolean(attr_dinner) = true
            WITH b
            MERGE (b)-[:has]->(bp:GoodForMeal:dinner {Name: ":GoodForMeal:dinner"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.GoodForMeal AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.dessert AS attr_dessert, b
        WHERE attr_dessert IS NOT NULL and toBoolean(attr_dessert) = true
            WITH b
            MERGE (b)-[:has]->(bp:GoodForMeal:dessert {Name: ":GoodForMeal:dessert"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.GoodForMeal AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.lunch AS attr_lunch, b
        WHERE attr_lunch IS NOT NULL and toBoolean(attr_lunch) = true
            WITH b
            MERGE (b)-[:has]->(bp:GoodForMeal:lunch {Name: ":GoodForMeal:lunch"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.GoodForMeal AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.latenight AS attr_latenight, b
        WHERE attr_latenight IS NOT NULL and toBoolean(attr_latenight) = true
            WITH b
            MERGE (b)-[:has]->(bp:GoodForMeal:latenight {Name: ":GoodForMeal:latenight"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.GoodForMeal AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.brunch AS attr_brunch, b
        WHERE attr_brunch IS NOT NULL and toBoolean(attr_brunch) = true
            WITH b
            MERGE (b)-[:has]->(bp:GoodForMeal:brunch {Name: ":GoodForMeal:brunch"});
            
            
///////////// Hair Specializes in ///////////////

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.africanamerican AS attr_africanamerican, b
        WHERE attr_africanamerican IS NOT NULL and toBoolean(attr_africanamerican) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:africanamerican {Name: ":HairSpecializesIn:africanamerican"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.curly AS attr_curly, b
        WHERE attr_curly IS NOT NULL and toBoolean(attr_curly) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:curly {Name: ":HairSpecializesIn:curly"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.kids AS attr_kids, b
        WHERE attr_kids IS NOT NULL and toBoolean(attr_kids) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:kids {Name: ":HairSpecializesIn:kids"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.asian AS attr_asian, b
        WHERE attr_asian IS NOT NULL and toBoolean(attr_asian) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:asian {Name: ":HairSpecializesIn:asian"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.straightperms AS attr_straightperms, b
        WHERE attr_straightperms IS NOT NULL and toBoolean(attr_straightperms) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:straightperms {Name: ":HairSpecializesIn:straightperms"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.perms AS attr_perms, b
        WHERE attr_perms IS NOT NULL and toBoolean(attr_perms) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:perms {Name: ":HairSpecializesIn:perms"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.coloring AS attr_coloring, b
        WHERE attr_coloring IS NOT NULL and toBoolean(attr_coloring) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:coloring {Name: ":HairSpecializesIn:coloring"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.HairSpecializesIn AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.extensions AS attr_extensions, b
        WHERE attr_extensions IS NOT NULL and toBoolean(attr_extensions) = true
            WITH b
            MERGE (b)-[:has]->(bp:HairSpecializesIn:extensions {Name: ":HairSpecializesIn:extensions"});
            
            
//////////////// Music //////////////

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Music AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.no_music AS attr_no_music, b
        WHERE attr_no_music IS NOT NULL and toBoolean(attr_no_music) = true
            WITH b
            MERGE (b)-[:has]->(bp:Music:no_music {Name: ":Music:no_music"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Music AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.dj AS attr_dj, b
        WHERE attr_dj IS NOT NULL and toBoolean(attr_dj) = true
            WITH b
            MERGE (b)-[:has]->(bp:Music:dj {Name: ":Music:dj"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Music AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.jukebox AS attr_jukebox, b
        WHERE attr_jukebox IS NOT NULL and toBoolean(attr_jukebox) = true
            WITH b
            MERGE (b)-[:has]->(bp:Music:jukebox {Name: ":Music:jukebox"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Music AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.live AS attr_live, b
        WHERE attr_live IS NOT NULL and toBoolean(attr_live) = true
            WITH b
            MERGE (b)-[:has]->(bp:Music:live {Name: ":Music:live"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Music AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.video AS attr_video, b
        WHERE attr_video IS NOT NULL and toBoolean(attr_video) = true
            WITH b
            MERGE (b)-[:has]->(bp:Music:video {Name: ":Music:video"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Music AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.karaoke AS attr_karaoke, b
        WHERE attr_karaoke IS NOT NULL and toBoolean(attr_karaoke) = true
            WITH b
            MERGE (b)-[:has]->(bp:Music:karaoke {Name: ":Music:karaoke"});

CALL apoc.load.json("file:///yelp/yelp_academic_dataset_business.json") YIELD value AS bus
WITH bus.attributes AS attributes, bus.business_id AS business_id
MERGE (b:Business {ID: business_id})
WITH attributes.Music AS attr, b
    WHERE attr IS NOT NULL
    WITH attr.background_music AS attr_background_music, b
        WHERE attr_background_music IS NOT NULL and toBoolean(attr_background_music) = true
            WITH b
            MERGE (b)-[:has]->(bp:Music:background_music {Name: ":Music:background_music"});
            
            
            
            
            
                 
